{"version":3,"file":"static/webpack/static/development/pages/AdminDashBoard/adminDashBoardShop.js.d3d63a43ff79aedd82a8.hot-update.js","sources":["webpack:///./Component/NavBar/LoginMenuNavbar.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  Form,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  NavLink \r\n\r\n} from \"reactstrap\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport Router from 'next/router';\r\nimport { GlobalContext } from \"../../hook/GlobalHook\";\r\nimport useInput from \"../../hook/custom-hook.js\";\r\nimport axios from \"axios\";\r\nimport Link from 'next/link'\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n min-width:300px;\r\n max-width:300px;\r\n min-height:350px;\r\n max-height:350px;\r\n display:flex;\r\n flex-direction:column;\r\n justify-content:flex-start;\r\nalign-items:center;\r\n`;\r\n\r\n\r\n\r\nfunction Auth(props) {\r\n    \r\n  const GlobalHook = useContext(GlobalContext);\r\n  const[getErr,setErr] = useState(\"\")\r\n  const[modal,setmodal] =useState(false)\r\n\r\n  function toggle() {\r\n      setmodal(!modal)\r\n    }\r\n\r\n  const { inputs, handleInputChange } = useInput({\r\n    Username: \"\",\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n   useEffect(() => {\r\n     if (localStorage.getItem(\"globalToken\")) {\r\n       const token = localStorage.getItem(\"globalToken\");\r\n       const user = JSON.parse(localStorage.getItem(\"globalUser\"));\r\n       \r\n    GlobalHook.setglobalToken(token)\r\n         GlobalHook.setglobalUser(user)\r\n       const currentTime = Date.now() / 1000;\r\n       const decoded = jwt_decode(token);\r\n   if (decoded.exp < currentTime) {\r\n     handleLogoutSubmit()\r\n     Router.push({\r\n       pathname: '/'\r\n     })\r\n   }\r\n\r\n     }\r\n   }, []);\r\n\r\n\r\n  const handleLoginSubmit = evt => {\r\n    evt.preventDefault();\r\n    const userData = {\r\n      email: inputs.email,\r\n      password: inputs.password\r\n    };\r\n    LoginFN(userData)\r\n   \r\n  };\r\n  function LoginFN(userData){\r\n    axios\r\n    .post(\"/api/user/login\", userData)\r\n    .then(res => {\r\n      const { token, user } = res.data;\r\n      props.setisUserDropDownOpen(false)\r\n      GlobalHook.setglobalToken(token)\r\n      GlobalHook.setglobalToken(user)\r\n      \r\n\r\n        localStorage.setItem(\"globalToken\", token);\r\n        localStorage.setItem(\"globalUser\", JSON.stringify(user));\r\n      \r\n    })\r\n    .catch(err => {\r\n      setmodal(true) ;\r\n    }\r\n      );\r\n    \r\n    \r\n\r\n  }\r\n\r\n  ///////\r\n  const handleLogoutSubmit = evt => {\r\n    \r\n    localStorage.removeItem(\"globalToken\");\r\n    localStorage.removeItem(\"globalUser\");\r\n    GlobalHook.setglobalUser({});\r\n    GlobalHook.setglobalToken();\r\n    props.setisUserDropDownOpen(false)\r\n\r\n  };\r\nif(modal){\r\n  return(\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle} >\r\n          <ModalHeader toggle={toggle}>Opps!</ModalHeader>\r\n          <ModalBody>\r\n          Email Or Password incorrect\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button  color=\"red\" onClick={toggle}>Ok</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n    </div>\r\n  );\r\n}\r\n  //######################### For Login User Here ##########################\r\nif(!GlobalHook.getglobalToken){\r\n    return (\r\n      <div>\r\n        \r\n      <Form  className=\"text-center  p-5\">\r\n          <p className=\"h4 mb-4\">Sign in</p>\r\n          <Input \r\n              type=\"email\" \r\n              name=\"email\" \r\n              id=\"email\" \r\n              className=\"form-control mb-4\" \r\n              placeholder=\"E-mail\" \r\n              onChange={handleInputChange}/>\r\n          <Input \r\n              type=\"password\" \r\n              name=\"password\" \r\n              id=\"password\" \r\n              className=\"form-control mb-4\" \r\n              placeholder=\"Password\" \r\n              onChange={handleInputChange}/>\r\n          <div className=\"d-flex justify-content-around\">\r\n            <Link href=\"/ForgetPage/forgetpage\">\r\n              <a className=\"text-primary\" href=\"/ForgetPage/forgetpage\" >Forget password?</a>\r\n            </Link>\r\n          </div>\r\n          <Button className=\"btn btn-info btn-block my-4\" color =\"primary\" onClick={handleLoginSubmit}>Sign in</Button>\r\n          <p>\r\n            Not a member?\r\n          </p>\r\n          <Link href=\"/SignUp/signup\">\r\n            <a className=\"text-primary\">Register</a>\r\n          </Link>\r\n        </Form>\r\n        </div>\r\n    );\r\n  } \r\n  //######################### For Login Admin Here ##########################\r\n  else {\r\n    return (\r\n      <div>\r\n        \r\n        <Wrapper>\r\n        <p>Hello: {GlobalHook.getglobalUser.Username}</p>\r\n        {GlobalHook.getglobalUser.role==\"admin\"? \r\n        <Button color=\"green\" href=\"/AdminDashBoard/adminDashBoardShop\" > Admin page </Button>:\r\n        <div>User</div>}\r\n       \r\n       \r\n        <Button  color=\"red\" onClick={() => handleLogoutSubmit()}>\r\n          Logout\r\n            </Button>\r\n      </Wrapper>\r\n\r\n      </div>\r\n\r\n);\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Auth;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAYA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAHA;AAVA;AAAA;AACA;AAcA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAKA;AAnCA;AAsCA;AAMA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAQA;AAKA;AACA;AAGA;;;;A","sourceRoot":""}